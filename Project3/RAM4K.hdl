// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in = load, sel[0] = address[9], sel[1] = address[10], sel[2] = address[11], a = ld1, b = ld2, c = ld3, d = ld4, e = ld5, f = ld6, g = ld7, h = ld8);
    RAM512(in = in,load = ld1, address = address[0..8], out = outa);
    RAM512(in = in,load = ld2, address = address[0..8], out = outb);
    RAM512(in = in,load = ld3, address = address[0..8], out = outc);
    RAM512(in = in,load = ld4, address = address[0..8], out = outd);
    RAM512(in = in,load = ld5, address = address[0..8], out = oute);
    RAM512(in = in,load = ld6, address = address[0..8], out = outf);
    RAM512(in = in,load = ld7, address = address[0..8], out = outg);
    RAM512(in = in,load = ld8, address = address[0..8], out = outh);
    Mux8Way16(a = outa, b = outb, c = outc, d = outd, e = oute, f = outf, g = outg, h = outh, sel[0] = address[9], sel[1] = address[10], sel[2] = address[11], out = out);	
}
